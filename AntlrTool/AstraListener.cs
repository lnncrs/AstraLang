//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AntlrTool\Astra.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AstraParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface IAstraListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] AstraParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] AstraParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] AstraParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] AstraParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] AstraParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] AstraParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] AstraParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] AstraParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expression([NotNull] AstraParser.Additive_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expression([NotNull] AstraParser.Additive_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expression([NotNull] AstraParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expression([NotNull] AstraParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AstraParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expression([NotNull] AstraParser.Primary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AstraParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expression([NotNull] AstraParser.Primary_expressionContext context);
}
